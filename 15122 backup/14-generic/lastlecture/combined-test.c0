struct inventory_item* make_inventory_item(string fruit, int quantity) {
  struct inventory_item* x = alloc(struct inventory_item);
  x->fruit = fruit;
  x->quantity = quantity;
  return x;
}

int main () {
  struct inventory_item* A = make_inventory_item("apple",   20);
  struct inventory_item* B = make_inventory_item("banana",  10);
  struct inventory_item* C = make_inventory_item("pumpkin", 50);
  struct inventory_item* D = make_inventory_item("banana",  20);

  hdict_t H = hdict_new(10);
  hdict_insert(H, A);
  hdict_insert(H, B);
  hdict_insert(H, C);
  assert(hdict_lookup(H, "apple") != NULL);
  assert(hdict_lookup(H, "lime") == NULL);
  hdict_insert(H, D);

  println("All produce tests passed!");


  // Get list of (possibly duplicate) words from file
  bundle_t words = read_words("texts/vocab_t_z.txt");
  int len = string_bundle_length(words);
  string[] word_list = string_bundle_array(words);

  // Store (word, count) entries in dictionary
  hdict_t H2 = hdict_new(len/2);
  for (int i = 0 ; i < len ; i++)
    //@loop_invariant 0 <= i;
    {
      struct wcount* wc = alloc(struct wcount);
      wc->word = word_list[i];
      hdict_insert(H2, wc);
    }

  println("All word count tests passed!\n");

  return 0;
}
