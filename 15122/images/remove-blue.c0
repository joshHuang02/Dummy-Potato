/**************************************************************************/
/*              COPYRIGHT Carnegie Mellon University 2020                 */
/* Do not post this file or any derivative on a public site or repository */
/**************************************************************************/


/* Assumes that pixel is already defined to be an int (pixel.c0) */
/* typedef int pixel; */

#use <util>

pixel_t[] remove_blue (pixel_t[] A, int width, int height)
//@requires is_valid_imagesize(width, height);
//@requires \length(A) == width*height;
//@ensures \result != A;
//@ensures \length(\result) == \length(A);
{
  pixel_t[] B = alloc_array(pixel_t, width*height);

  // j refers to row number
  for (int j = 0; j < height; j++)
  //@loop_invariant 0 <= j;
  {
    // i refers to column number
    for (int i = 0; i < width; i++)
    //@loop_invariant 0 <= i;
    {
      //@assert 0 <= j && j < height && 0 <= i && i < width;
      int index = get_index(j, i, width, height);
      //@assert 0 <= index && index < \length(A);
      //@assert \length(A) == \length(B);
      
      int alpha = get_alpha(A[index]);
      int red = get_red(A[index]);
      int green = get_green(A[index]);
      B[index]=make_pixel(alpha, red, green, 0 );
    }
  }

  return B;
}
